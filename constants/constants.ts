import i18next from 'i18next';

export const HTTP_STATUSES = {
  SUCCESS: 200,
  CREATED: 201,
  ACCEPTED: 202,
  NO_CONTENT: 204,
  RESET_CONTENT: 205,
  PARTIAL_CONTENT: 206,
  BAD_REQUEST: 400,
  UNAUTHORIZED: 401,
  FORBIDDEN: 403,
  NOT_FOUND: 404,
  PAYLOAD_LARGE: 413,
  TOO_MANY_REQUESTS: 429,
  SERVER_ERROR: 500,
  SERVICE_UNAVAILABLE: 503,
} as const;

const EMAIL_MESSAGES = {
  WELCOME_SUBJECT: () => i18next.t('EMAIL_MESSAGES.WELCOME_SUBJECT'),
  RESET_PASSWORD_SUBJECT: () => i18next.t('EMAIL_MESSAGES.RESET_PASSWORD_SUBJECT'),
  CHANGE_PASSWORD_SUBJECT: () => i18next.t('EMAIL_MESSAGES.CHANGE_PASSWORD_SUBJECT'),
  MAIL_SENT: () => i18next.t('EMAIL_MESSAGES.MAIL_SENT'),
  MAIL_INVALID: () => i18next.t('EMAIL_MESSAGES.MAIL_INVALID'),
  MAIL_SUCCESS: () => i18next.t('EMAIL_MESSAGES.MAIL_SUCCESS'),
  MAIL_FAILED: () => i18next.t('EMAIL_MESSAGES.MAIL_FAILED'),
  NO_EMAIL_TEMPLATE_FOUND: () => i18next.t('EMAIL_MESSAGES.NO_EMAIL_TEMPLATE_FOUND'),
  MAIL_SENT_MESSAGE: () => i18next.t('EMAIL_MESSAGES.MAIL_SENT_MESSAGE'),
  VERIFICATION_MAIL_SENT_MESSAGE: () => i18next.t('EMAIL_MESSAGES.VERIFICATION_MAIL_SENT_MESSAGE'),
} as const;

const API_MESSAGES = {
  REGISTER_MESSAGE: () => i18next.t('API_MESSAGES.REGISTER_MESSAGE'),
  LOGIN_MESSAGE: () => i18next.t('API_MESSAGES.LOGIN_MESSAGE'),
  FORGOT_PASSWORD_MESSAGE: () => i18next.t('API_MESSAGES.FORGOT_PASSWORD_MESSAGE'),
  RESET_PASSWORD_MESSAGE: () => i18next.t('API_MESSAGES.RESET_PASSWORD_MESSAGE'),
  ACCOUNT_VERIFIED_MESSAGE: () => i18next.t('API_MESSAGES.ACCOUNT_VERIFIED_MESSAGE'),
  CHANGE_PASSWORD_MESSAGE: () => i18next.t('API_MESSAGES.CHANGE_PASSWORD_MESSAGE'),
  LOGOUT_MESSAGE: () => i18next.t('API_MESSAGES.LOGOUT_MESSAGE'),

  TOKEN_VERIFIED: () => i18next.t('API_MESSAGES.TOKEN_VERIFIED'),
};

const MESSAGES = {
  INVALID_DATA: () => i18next.t('MESSAGES.INVALID_DATA'),
  NO_DATA_FOUND: () => i18next.t('MESSAGES.NO_DATA_FOUND'),
  ID_NOT_FOUND: () => i18next.t('MESSAGES.ID_NOT_FOUND'),
  INCORRECT_LOGIN: () => i18next.t('MESSAGES.INCORRECT_LOGIN'),
  USER_ALREADY_EXIST: () => i18next.t('MESSAGES.USER_ALREADY_EXIST'),
  ALREADY_VERIFIED: () => i18next.t('MESSAGES.ALREADY_VERIFIED'),
  NOT_VERIFIED: () => i18next.t('MESSAGES.NOT_VERIFIED'),
  NOT_ACTIVATED: () => i18next.t('MESSAGES.NOT_ACTIVATED'),
  PERMISSION_ALREADY_EXIST: () => i18next.t('MESSAGES.PERMISSION_ALREADY_EXIST'),
  PASSWORD_WRONG: () => i18next.t('MESSAGES.PASSWORD_WRONG'),
  SAME_PASSWORD: () => i18next.t('MESSAGES.SAME_PASSWORD'),
  INVALID_ROLE: () => i18next.t('MESSAGES.INVALID_ROLE'),
  SITE_HANDSHAKE: () => i18next.t('MESSAGES.SITE_HANDSHAKE'),
  API_HANDSHAKE: () => i18next.t('MESSAGES.API_HANDSHAKE'),
  FRONT_HANDSHAKE: () => i18next.t('MESSAGES.FRONT_HANDSHAKE'),
  CMS_HANDSHAKE: () => i18next.t('MESSAGES.CMS_HANDSHAKE'),
  ROLE_DELETE_NOT_ALLOWED: () => i18next.t('MESSAGES.ROLE_DELETE_NOT_ALLOWED'),
  PROVIDE_VALID_OBJECT_ID: () => i18next.t('MESSAGES.PROVIDE_VALID_OBJECT_ID'),
  UPLOAD_FILE: () => i18next.t('MESSAGES.UPLOAD_FILE'),
  INVALID_FILE: () => i18next.t('MESSAGES.INVALID_FILE'),
  REFERRAL_USER_ALREADY_EXIST: () => i18next.t('MESSAGES.REFERRAL_USER_ALREADY_EXIST'),
  NOT_ALLOWED_TO_GO_BACKWARD: () => i18next.t('MESSAGES.NOT_ALLOWED_TO_GO_BACKWARD'),
};

const ERRORS = {
  UNKNOWN_ERROR: () => i18next.t('ERRORS.UNKNOWN_ERROR'),
  TECHNICAL_ERROR: () => i18next.t('ERRORS.TECHNICAL_ERROR'),
  EMAIL_ERROR: () => i18next.t('ERRORS.EMAIL_ERROR'),
  S3_ERROR: () => i18next.t('ERRORS.S3_ERROR'),
  FORBIDDEN_ERROR: () => i18next.t('ERRORS.FORBIDDEN_ERROR'),
  UNAUTHORIZED_ERROR: () => i18next.t('ERRORS.UNAUTHORIZED_ERROR'),
  TOKEN_NOT_EXIST_ERROR: () => i18next.t('ERRORS.TOKEN_NOT_EXIST_ERROR'),
  INVALID_TOKEN_ERROR: () => i18next.t('ERRORS.INVALID_TOKEN_ERROR'),
  TOKEN_EXPIRED_ERROR: () => i18next.t('ERRORS.TOKEN_EXPIRED_ERROR'),
  EXPIRED_TOKEN_ERROR: () => i18next.t('ERRORS.EXPIRED_TOKEN_ERROR'),
  PASSWORD_CHANGED_ERROR: () => i18next.t('ERRORS.PASSWORD_CHANGED_ERROR'),
  RATE_LIMIT_ERROR: () => i18next.t('ERRORS.RATE_LIMIT_ERROR'),
  MAINTENANCE_ERROR: () => i18next.t('ERRORS.MAINTENANCE_ERROR'),
  JSON_PARSE_ERROR: () => i18next.t('ERRORS.JSON_PARSE_ERROR'),
};

const FUNCTIONS = {
  ROUTE_NOT_FOUND: (url: string) => i18next.t('FUNCTIONS.ROUTE_NOT_FOUND', { url }),
  FORMAT: (prefix: string) => prefix.toUpperCase().replace(/\s/g, '_'),
};

const CRUD_MESSAGES = {
  DATA_CREATED: (prefix: string) => i18next.t(`${FUNCTIONS.FORMAT(prefix)}.CREATED`),
  DATA_RETRIEVED: (prefix: string) => i18next.t(`${FUNCTIONS.FORMAT(prefix)}.RETRIEVED`),
  DATA_UPDATED: (prefix: string) => i18next.t(`${FUNCTIONS.FORMAT(prefix)}.UPDATED`),
  DATA_DELETED: (prefix: string) => i18next.t(`${FUNCTIONS.FORMAT(prefix)}.DELETED`),
  ALREADY_EXISTS: (prefix: string) => i18next.t(`${FUNCTIONS.FORMAT(prefix)}.ALREADY_EXISTS`),
};

const OTHERS = {
  PER_PAGE_LIMIT: 10,
};

export default {
  ...HTTP_STATUSES,
  ...EMAIL_MESSAGES,
  ...API_MESSAGES,
  ...MESSAGES,
  ...ERRORS,
  ...FUNCTIONS,
  ...CRUD_MESSAGES,
  ...OTHERS,
};
